repeat wait() until game.Players
repeat wait() until game.Players.LocalPlayer
repeat wait() until game.ReplicatedStorage
repeat wait() until game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui")
repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Main")
local vu = game:GetService("VirtualUser")
local plr = game.Players.LocalPlayer
local shotmodule = getsenv(game:GetService("Players").LocalPlayer.PlayerScripts.Scripts.Game.Misc.Slingshot)
local UTS = game.UserInputService
local camera = game.Workspace.CurrentCamera
local plr = game.Players.LocalPlayer
local Client = require(game.ReplicatedStorage.Library.Client)
getgenv().ticka = tick()
repeat task.wait() until game:IsLoaded()
if not game:IsLoaded() then game:IsLoaded():Wait(5) end
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
RunService:Set3dRenderingEnabled(false)

local Initialize = function()
    UserInputService.WindowFocusReleased:Connect(WindowFocusReleasedFunction)
    UserInputService.WindowFocused:Connect(WindowFocusedFunction)
    return
end
Initialize()
UserSettings():GetService("UserGameSettings").MasterVolume = 0
local decalsyeeted = true
local g = game
local w = g.Workspace
local l = g.Lighting
local t = w.Terrain
sethiddenproperty(l,"Technology",2)
sethiddenproperty(t,"Decoration",false)
t.WaterWaveSize = 0
t.WaterWaveSpeed = 0
t.WaterReflectance = 0
t.WaterTransparency = 1
l.GlobalShadows = 0
l.FogEnd = 9e9
l.Brightness = 0
settings().Rendering.QualityLevel = "Level01"
for i, v in pairs(w:GetDescendants()) do
    if v:IsA("BasePart") and not v:IsA("MeshPart") then
        v.Material = "Plastic"
        v.Transparency = 1
        v.Reflectance = 0
    elseif (v:IsA("Decal") or v:IsA("Texture")) and decalsyeeted then
        v.Transparency = 1
    elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
        v.Lifetime = NumberRange.new(0)
    elseif v:IsA("Explosion") then
        v.BlastPressure = 1
        v.BlastRadius = 1
    elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
        v.Enabled = false
    elseif v:IsA("MeshPart") and decalsyeeted then
        v.Material = "Plastic"
        v.Transparency = 1
        v.Reflectance = 0
        v.TextureID = 0
    elseif v:IsA("SpecialMesh") and decalsyeeted  then
        v.TextureId=0
    elseif v:IsA("ShirtGraphic") and decalsyeeted then
        v.Graphic=1
    elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
        v[v.ClassName.."Template"]=1
    end
end
for i = 1,#l:GetChildren() do
    e=l:GetChildren()[i]
    if e:IsA("BlurEffect") or e:IsA("SunRaysEffect") or e:IsA("ColorCorrectionEffect") or e:IsA("BloomEffect") or e:IsA("DepthOfFieldEffect") then
        e.Enabled = false
    end
end
w.DescendantAdded:Connect(function(v)
    pcall(function()
        if v:IsA("BasePart") and not v:IsA("MeshPart") then
            v.Material = "Plastic"
            v.Reflectance = 0
            v.Transparency = 1
        elseif v:IsA("Decal") or v:IsA("Texture") and decalsyeeted then
            v.Transparency = 1
        elseif v:IsA("ParticleEmitter") or v:IsA("Trail") then
            v.Lifetime = NumberRange.new(0)
        elseif v:IsA("Explosion") then
            v.BlastPressure = 1
            v.BlastRadius = 1
        elseif v:IsA("Fire") or v:IsA("SpotLight") or v:IsA("Smoke") or v:IsA("Sparkles") then
            v.Enabled = false
        elseif v:IsA("MeshPart") and decalsyeeted then
            v.Material = "Plastic"
            v.Reflectance = 0
            v.TextureID = 0
            v.Transparency = 1
        elseif v:IsA("SpecialMesh") and decalsyeeted then
            v.TextureId=0
        elseif v:IsA("ShirtGraphic") and decalsyeeted then
            v.ShirtGraphic=1
        elseif (v:IsA("Shirt") or v:IsA("Pants")) and decalsyeeted then
            v[v.ClassName.."Template"]=1
        end
    end)
end)

function hasunlockzones(name) 
    return Client.ZoneCmds.Owns(name)
end

if game.PlaceId == 16498369169 then
    game:GetService("ReplicatedStorage").Network.World1Teleport:InvokeServer()
    wait(.1)
    plr:Kick("dit me thang hiep")
end
getgenv().rb = 0
local a = Client.RebirthCmds.GetNextRebirth()
if a ~= nil then
    getgenv().rb = a._id
end

if hasunlockzones('Rainbow Road') and tonumber(getgenv().rb) >= 3 then
    function dectectballon(pos)
        for i,v in pairs(game:GetService("Workspace")["__THINGS"].BalloonGifts:GetChildren()) do
            if v:FindFirstChild('Giftbox') then
                if (getgenv().getonebloon.Position - v.Giftbox.Position).Magnitude < 10 then
                    return v
                end
            end
        end
        return false
    end

    getgenv().ballon = nil

    local oldballon
    oldballon = hookmetamethod(game, "__namecall", function(self, ...)
        local args = {...}    
        if self.Name == "BalloonGifts_BalloonPopped" then
            getgenv().ballon = args[1]
        end
        return oldballon(self, ...)
    end);

    -- print('ere')
    -- repeat wait() until game:GetService("ReplicatedStorage").Network:FindFirstChild('BalloonGifts_BalloonPopped')
    -- print('asdasd')
    -- game:GetService("ReplicatedStorage").Network["BalloonGifts_BalloonPopped"].OnClientEvent:Connect(function(...) 
    --     local a,b = ...
    --     getgenv().ballon = a
    -- end)

    function getchest()
        for i,v in pairs(getgenv().data) do
            if v.Id == getgenv().ballon then
                return v.LandPosition
            end
        end
        return false
    end

    function onehitspeed()
        local Library = require(game:GetService("ReplicatedStorage").Library)
        local Network = Library.Network
        local Balancing = Library.Balancing
        local Zones = Library.Directory.Zones
        local pets = Library.Save.Get().Inventory.Pet	
        Library.PlayerPet.CalculateSpeedMultiplier = function(...)
            return 999999999
        end
    end

    onehitspeed()

    -- hop sv
    ---

    function attack()
        pcall(function()
            local a = {}
            for i,v in pairs(game:GetService("Workspace")["__THINGS"].Breakables:GetChildren()) do
                for i1,v1 in pairs(v:GetChildren()) do
                    if (v1.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude <= 5 then
                        return v.Name
                    end
                end
            end
        end)
    end

    game:GetService("RunService").Heartbeat:Connect(function()
        game:GetService("ReplicatedStorage").Network.Breakables_PlayerDealDamage:FireServer(attack())
    end)

    getgenv().getonebloon = nil

    function get1on100()
        getgenv().data = game:GetService("ReplicatedStorage").Network["BalloonGifts_GetActiveBalloons"]:InvokeServer()
        if not getgenv().data[getgenv().getonebloon] then
            getgenv().getonebloon = nil
        end
        for i,v in pairs(getgenv().data) do
            if getgenv().getonebloon == nil then
                getgenv().getonebloon = v
                return
            else
                return
            end
        end
        return false
    end

    function havegiftbag()
        for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Misc._byUID) do
            if v._data.id == 'Gift Bag' then
                if v._data._am > 500 then
                    return {v._data._am, i}
                end
            end
        end
        return false
    end

    function havegiftbag2()
        for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Misc._byUID) do
            if v._data.id == 'Large Gift Bag' then
                if v._data._am > 500 then
                    return {v._data._am, i}
                end
            end
        end
        return false
    end

    function havegiftbag3()
        for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Misc._byUID) do
            if v._data.id == 'Mini Chest' then
                if v._data._am > 50 then
                    return {v._data._am, i}
                end
            end
        end
        return false
    end

    function getcoin()
        local a = Client.Save.Get()
        for i,v in pairs(a.Inventory.Currency) do
            if type(v) == "table" and v.id == "Diamonds" and v._am ~= nil then
                return {v._am,i}
            end
        end
        return 0
    end

    function collectgem()
        if havegiftbag() ~= false and getcoin()[1] > 10000 then
            getgenv().busy = true
            wait(5)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(147.03858947753906, 23.593482971191406, -349.0108337402344)
            wait(2)
            local args = {
                [1] = getgenv().username,
                [2] = "quanhsendgemne",
                [3] = "Misc",
                [4] = havegiftbag()[2],
                [5] = havegiftbag()[1]
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))      
            return
        end
        if havegiftbag2() ~= false and getcoin()[1] > 10000 then
            getgenv().busy = true
            wait(5)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(147.03858947753906, 23.593482971191406, -349.0108337402344)
            wait(2)
            local args = {
                [1] = getgenv().username,
                [2] = "quanhsendgemne",
                [3] = "Misc",
                [4] = havegiftbag2()[2],
                [5] = havegiftbag2()[1]
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))      
            return
        end
        if havegiftbag3() ~= false and getcoin()[1] > 10000 then
            getgenv().busy = true
            wait(5)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(147.03858947753906, 23.593482971191406, -349.0108337402344)
            wait(2)
            local args = {
                [1] = getgenv().username,
                [2] = "quanhsendgemne",
                [3] = "Misc",
                [4] = havegiftbag3()[2],
                [5] = havegiftbag3()[1]
            }
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Send"):InvokeServer(unpack(args))      
            return
        end
        getgenv().busy = false
    end

    function autoballon()
        if getgenv().busy == false then
            local toiuu1 = dectectballon(get1on100())
            if toiuu1 ~= false and getgenv().ballon == nil then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(toiuu1.Balloon.Position) * CFrame.new(0,20,0)
                print(getgenv().getonebloon.Id)
                local args = {
                    [1] = getgenv().getonebloon.Id
                }
            
                game:GetService("ReplicatedStorage").Network.BalloonGifts_BalloonHit:FireServer(unpack(args))
                local args = {
                    [1] = getgenv().getonebloon.Position,
                    [2] = 1.1334461712289494,
                    [3] = 0.7074524422595941,
                    [4] = 200
                }
                
                game:GetService("ReplicatedStorage").Network.Slingshot_FireProjectile:InvokeServer(unpack(args))
            end
            if getgenv().data[getgenv().ballon] then
                print('erere')
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(getgenv().data[getgenv().ballon].LandPosition)
                wait(5)
            else
                getgenv().ballon = nil
                getgenv().getonebloon = nil
                if toiuu1 == false then
                end
            end
        end
    end

    function dbuoi()
        for i,v in pairs(game:GetService("Workspace")["__THINGS"].Orbs:GetChildren()) do
            v.CanCollide = false
            v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
        end
        for i,v in pairs(game:GetService("Workspace")["__THINGS"].Lootbags:GetDescendants()) do
            if v:IsA("MeshPart") then
                v.CanCollide = false
                v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
            end
        end
    end

    function jump()
        game:GetService("VirtualInputManager"):SendKeyEvent(true, 32, false, game)
        wait(1)
        game:GetService("VirtualInputManager"):SendKeyEvent(false, 32, false, game)
    end

    spawn(function()
        while true do wait()
            pcall(function()
                local tickm = tick()
                repeat wait()
                until tick() - tickm >= 30
                jump()
            end)
        end
    end)

    spawn(function()
        while true do wait()
            local a,b = pcall(collectgem)
            print(a,b)
        end
    end)

    spawn(function()
        while true do wait()
            pcall(dbuoi)
            if game:GetService("Players").LocalPlayer.PlayerGui["_MISC"].Slingshot.Enabled == false then
                game:GetService("ReplicatedStorage").Network.Slingshot_Toggle:InvokeServer()
            end
        end
    end)

    spawn(function()
        while true do wait(60)
            if game:GetService("Players").LocalPlayer.PlayerGui["_MISC"].Slingshot.Enabled == true then
                game:GetService("ReplicatedStorage").Network.Slingshot_Toggle:InvokeServer()
            end
        end
    end)

    spawn(function()
        while true do wait()
            pcall(function()
                local Client = require(game.ReplicatedStorage.Library.Client)
                local a = Client.Save.Get()
                for i,v in pairs(a.HiddenPresents) do
                    local args = {
                        [1] = v.ID
                    }
                    
                    game:GetService("ReplicatedStorage").Network:FindFirstChild("Hidden Presents: Found"):InvokeServer(unpack(args))
                    wait(2)
                end
            end)
        end
    end)

    while true do task.wait()
        local a,b = pcall(autoballon)
    end
else
repeat wait() until game.Players
repeat wait() until game.Players.LocalPlayer
repeat wait() until game.ReplicatedStorage
repeat wait() until game:GetService("Players").LocalPlayer:FindFirstChild("PlayerGui")
repeat wait() until game:GetService("Players").LocalPlayer.PlayerGui:FindFirstChild("Main")
getgenv().ticka = tick()
local plr = game.Players.LocalPlayer
local Client = require(game.ReplicatedStorage.Library.Client)
spawn(function()
    while true do wait(1)
        if tick() - getgenv().ticka > 60 * 10 then
            plr:Kick("vuavua")
        end
    end
end)

function dbuoi()
    for i,v in pairs(game:GetService("Workspace")["__THINGS"].Orbs:GetChildren()) do
        v.CanCollide = false
        v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
    end
    
    for i,v in pairs(game:GetService("Workspace")["__THINGS"].Lootbags:GetDescendants()) do
        if v:IsA("MeshPart") then
            v.CanCollide = false
            v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0,0,0)
        end
    end
end

function attack()
    local a = {}
    for i,v in pairs(game:GetService("Workspace")["__THINGS"].Breakables:GetChildren()) do
        for i1,v1 in pairs(v:GetChildren()) do
            if (v1.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude < 60 and #a < 2 then
                return v.Name
            end
        end
    end
end

function destroyvipzone()
    for i,v in pairs(getmapne()["1 | Spawn"].INTERACT.BREAK_ZONES:GetChildren()) do
        if tostring(v.Position) == "214.12213134765625, 24.417156219482422, -587.1192626953125" then
            print("A")
           v:Destroy() 
        end
    end
end

function jump()
    game:GetService("VirtualInputManager"):SendKeyEvent(true, 32, false, game)
    wait(4)
    game:GetService("VirtualInputManager"):SendKeyEvent(false, 32, false, game)
end

pcall(destroyvipzone)

game:GetService("RunService").Heartbeat:Connect(function()
    spawn(function()
        game:GetService("ReplicatedStorage").Network.Breakables_PlayerDealDamage:FireServer(attack())
    end)
end)

function hasunlockzones(name) 
    return Client.ZoneCmds.Owns(name)
end

function getnextmap()
    return Client.ZoneCmds.GetNextZone()
end

function getlastmap()
    return Client.ZoneCmds.GetMaxOwnedZone()
end

function formatclient(name)
    local pattern = " table: .*$"
    local result = name:gsub(pattern, "") 
    return result
end

function formatmap(text)
    local result = string.match(text, "| (.*)$")
    return result
end

function getmapne()
    if game.PlaceId == 16498369169 then
        return workspace.Map2
    else
        return workspace.Map
    end
end

function getlocation()
    for i,v in pairs(getmapne():GetChildren()) do
        if formatmap(v.Name) == formatclient(getlastmap()) and v:FindFirstChild("INTERACT") then
            return v.INTERACT.BREAKABLE_SPAWNS.Main
        end
    end
    return false
end

function getfoderlastmap()
    local a = nil
    local b = 0
    for i,v in pairs(getmapne():GetChildren()) do
        local number = tonumber(string.match(v.Name, "(%d+)"))
        local namemap = formatmap(v.Name)
        if number ~= nil and v:FindFirstChild("INTERACT") then
            if number > b and hasunlockzones(namemap) then
                b = number
                a = v.INTERACT.BREAK_ZONES.BREAK_ZONE
            end
        end
    end
    return a
end

function randompotion(number)
    local Client = require(game.ReplicatedStorage.Library.Client)
    for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Potion._byUID) do
        return i
    end
    return false
end

function autoeatpotion()
    if randompotion() ~= false then
        Client.PotionCmds.Consume(randompotion())
    end
end

function Rebirth() 
    local a = Client.RebirthCmds.GetNextRebirth()
    if a ~= nil then
        if tonumber(a._id) < 4 then
            Client.RebirthCmds.Rebirth(tostring(a._id))
        end
    end
end

getgenv().numberk = 1

function collectrank()
    local args = {
        [1] = getgenv().numberk
    }
    game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("Ranks_ClaimReward"):FireServer(unpack(args))
    getgenv().numberk = getgenv().numberk + 1
    if getgenv().numberk >= 30 then
        getgenv().numberk = 1
    end
end

function unlockmapattk()
    game:GetService("ReplicatedStorage").Network.Zones_RequestPurchase:InvokeServer(formatclient(getnextmap()))
    pcall(dbuoi)
    game:GetService("ReplicatedStorage").Network.SqueakyToy_Consume:InvokeServer()
    game:GetService("ReplicatedStorage").Network.ChristmasCookie_Consume:InvokeServer()
    game:GetService("ReplicatedStorage").Network.ToyBall_Consume:InvokeServer()
    game:GetService("ReplicatedStorage").Network.ToyBone_Consume:InvokeServer()
end

function autotnt() 
    game:GetService("ReplicatedStorage").Network.TNT_Consume:InvokeServer()
end

function getflag()
    for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Misc._byUID) do
        if v._data.id == "Coins Flag" then
            return {v._data.id,i}
        end
    end
end

function autoflag()
    if hasunlockzones("No Path Forest") then
        Client.ZoneFlagCmds.Consume(getflag()[1],getflag()[2])
    end
end

function loop3()
    while true do wait(60)
        pcall(autoflag)
    end
end

spawn(loop3)

function autocreatetnt() 
    if hasunlockzones("Treasure Dungeon") then
        game:GetService("ReplicatedStorage").Network["TNT_Crate_Consume"]:InvokeServer()
    end
end

function loop1()
    while true do wait(5)
        pcall(unlockmapattk)
        pcall(autoeatpotion)
        pcall(autotnt)
        pcall(autocreatetnt)
    end
end

function loop2()
    while true do wait(5)
        pcall(Rebirth)
    end
end

spawn(loop1)
spawn(loop2)

function getrank()
    return Client.Save.Get().Rank
end

function enchant(enchantname,rate)
    for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Enchant._byUID) do
        if v._data.id == enchantname and v._data.tn == rate then
            return i
        end
    end
end

local args = {
    [1] = 1
}

game:GetService("ReplicatedStorage").Network.Enchants_ClearSlot:FireServer(unpack(args))
wait(3)
local args = {
    [1] = 2
}

game:GetService("ReplicatedStorage").Network.Enchants_ClearSlot:FireServer(unpack(args))

local Client = require(game.ReplicatedStorage.Library.Client)

function autoequipentchant()
    Client.EnchantCmds.Equip(enchant('Magnet', 3),1)
    wait(2)
    Client.EnchantCmds.Equip(enchant('Coins', 5),1)
end

function loop4()
    while true do wait(5)
        pcall(autoequipentchant)
    end
end

spawn(loop4)

function checkmail()
    local tb = {
        [1] = {
    
        }
    }
    local a = game:GetService("ReplicatedStorage").Network["Mailbox: Get"]:InvokeServer()
    if type(a) == 'table' then
        if a.Inbox then
            for i,v in pairs(a.Inbox) do
                table.insert(tb[1], v.uuid)
            end
        end
    end
    if #tb[1] > 0 then
        return tb
    else
        return false
    end
end

if game.PlaceId == 16498369169 then
    game:GetService("ReplicatedStorage").Network.Pets_ToggleFavoriteMode:FireServer()
    wait(1)
    game:GetService("ReplicatedStorage").Network.Pets_ToggleFavoriteMode:FireServer()
end

if not hasunlockzones("Rainbow Road") then
    function unlockmap()
        local a = Client.Save.Get()
        local b = Client.RankCmds.GetMaxPurchasableEquipSlots()
        local abz = Client.RebirthCmds.GetNextRebirth()
        if Client.PetCmds.IsFavoriteModeEnabled() == true then
            game:GetService("ReplicatedStorage").Network.Pets_ToggleFavoriteMode:FireServer()
        end
        if checkmail() ~= false then
            wait(5)
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(147.03858947753906, 23.593482971191406, -349.0108337402344)
            wait(2)
            game:GetService("ReplicatedStorage").Network:FindFirstChild("Mailbox: Claim"):InvokeServer(unpack(checkmail()))
            return
        end
        if Client.PetCmds.IsFavoriteModeEnabled() == true then
            game:GetService("ReplicatedStorage").Network.Pets_ToggleFavoriteMode:FireServer()
        end
        -- if hasunlockzones("Rainbow Road") then
        --     if game.PlaceId == 16498369169 then
        --         game:GetService("ReplicatedStorage").Network.World1Teleport:InvokeServer()
        --         wait(.5)
        --         plr:Kick("vuavua")
        --     end
        -- end
        if hasunlockzones("Rainbow Road") and abz == nil and game.PlaceId ~= 16498369169 then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-62.38117218017578, 208.9638671875, 6744.44775390625)
            game:GetService("ReplicatedStorage").Network.RequestTechRocket:FireServer()
            return 
        end
        if a.MaxPetsEquipped < b + 4 and hasunlockzones("Green Forest") and game.PlaceId ~= 16498369169 and b < 50 then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(691.4805297851562, 16.557279586791992, -251.11878967285156)
            for i =1 , b do
                local args = {
                    [1] = i
                }
                
                game:GetService("ReplicatedStorage"):WaitForChild("Network"):WaitForChild("EquipSlotsMachine_RequestPurchase"):InvokeServer(unpack(args))
            end
        else
            if getlocation() ~= false then
                if (plr.Character.HumanoidRootPart.Position - getlocation().Position).Magnitude > 30 then
                    plr.Character.HumanoidRootPart.CFrame = getlocation().CFrame * CFrame.new(0,10,0)
                end
            else
                plr.Character.HumanoidRootPart.CFrame = getfoderlastmap().CFrame * CFrame.new(0,10,0)
            end
        end
    end

    function click2(a)
        game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-50,a.AbsolutePosition.Y+50,0,true,a,1)
        game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-50,a.AbsolutePosition.Y+50,0,false,a,1)
    end

    spawn(function()
        while true do wait(1)
            pcall(function() 
                click2(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Contents.Ok)
            end)
        end
    end)

    function getfruit()
        local Client = require(game.ReplicatedStorage.Library.Client)
        for i,v in pairs(Client.InventoryCmds.State().container._store._byType.Fruit._byUID) do
            Client.FruitCmds.Consume(i)
            wait(1)
            click2(game:GetService("Players").LocalPlayer.PlayerGui.Message.Frame.Contents.Ok)
        end
    end

    spawn(function()
        while true do wait(10)
            pcall(getfruit)
        end
    end)

    function click2(a)
        game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-50,a.AbsolutePosition.Y+50,0,true,a,1)
        game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-50,a.AbsolutePosition.Y+50,0,false,a,1)
    end

    function click3(a)
        game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-100,a.AbsolutePosition.Y+100,0,true,a,1)
        game:GetService("VirtualInputManager"):SendMouseButtonEvent(a.AbsolutePosition.X+a.AbsoluteSize.X-100,a.AbsolutePosition.Y+100,0,false,a,1)
    end

    function detc4()
        click2(game:GetService("Players").LocalPlayer.PlayerGui.Rank.Frame.Side.Balance)
        click3(game:GetService("Players").LocalPlayer.PlayerGui.Rank.Frame.Side.Balance)
    end
    getgenv().numberdaily = 1
    function whatthef()
        local args = {
            [1] = getgenv().numberdaily
        }
        game:GetService("ReplicatedStorage").Network:FindFirstChild("Redeem Free Gift"):InvokeServer(unpack(args))
        getgenv().numberdaily = getgenv().numberdaily + 1
        if getgenv().numberdaily >= 12 then
            getgenv().numberdaily = 1
        end
    end


    game:GetService("RunService").Stepped:Connect(function()
        pcall(collectrank)
        pcall(detc4)
        pcall(whatthef)
    end)    

    while true do wait()
        local a,b = pcall(unlockmap)
        print(a,b)
    end
end

end
